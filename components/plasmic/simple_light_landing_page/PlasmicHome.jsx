// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: tKTnPCKDkyqVsBLoY29HS4
// Component: yOP6IrvdsVj-G
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: ey_uE02a4G6XM/component
import Section from "../../Section"; // plasmic-import: O5PofbKZuSyR-q/component
import Button from "../../Button"; // plasmic-import: iFqFPiL8JIFWnK/component
import FeatureCard from "../../FeatureCard"; // plasmic-import: kJwLVc9E80M3h/component
import Testimonial from "../../Testimonial"; // plasmic-import: drurerqJ3-jOgr/component
import HomeCta from "../../HomeCta"; // plasmic-import: WLZ0rblPyexnv/component
import Footer from "../../Footer"; // plasmic-import: ZPn3bgNH6g0zH/component
import { useScreenVariants as useScreenVariantsd78FvYflotizkk } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: d78fvYflotizkk/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_simple_light_landing_page.module.css"; // plasmic-import: tKTnPCKDkyqVsBLoY29HS4/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: yOP6IrvdsVj-G/css
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: 6MLW-XtXOmG0d4/icon
import InstagramsvgIcon from "../ppis_x_pintu/icons/PlasmicIcon__Instagramsvg"; // plasmic-import: QW9K0OUTp/icon
import GithubIconIcon from "./icons/PlasmicIcon__GithubIcon"; // plasmic-import: aYYl40-BIKRWKP/icon

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

function PlasmicHome__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsd78FvYflotizkk()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <Section
            data-plasmic-name={"topSection"}
            data-plasmic-override={overrides.topSection}
            className={classNames("__wab_instance", sty.topSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xcT4T)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eEiMr)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__qwAj)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mVmKa
                    )}
                  >
                    {"PPIS x PINTU Cup"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oFqCo
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent suscipit maximus ex, a sollicitudin justo ullamcorper fringilla. Quisque blandit sollicitudin velit in ultricies."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kdnnJ)}
              >
                <Button
                  className={classNames("__wab_instance", sty.button__fyh75)}
                  color={"red"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__z1NCm)}
                      role={"img"}
                    />
                  }
                  showEndIcon={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1SoV
                    )}
                  >
                    {"Sign Up"}
                  </div>
                </Button>

                <Button
                  className={classNames("__wab_instance", sty.button__y9Bmn)}
                >
                  {"Learn more"}
                </Button>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__e4Cj8)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___8Eyce)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"638px"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={{
                    src: "/plasmic/ppis_x_pintu/images/undrawGameDayUcx91Png.png",
                    fullWidth: 1236,
                    fullHeight: 953,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"solutions"}
            data-plasmic-override={overrides.solutions}
            className={classNames("__wab_instance", sty.solutions)}
            hasSubtitle={true}
            hasTitle={true}
            subtitle={
              "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
            }
            title={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___13TEv
                )}
              >
                {"Three Sports"}
              </div>
            }
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__xliYk)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ru5Vn)}
                >
                  <FeatureCard
                    className={classNames(
                      "__wab_instance",
                      sty.featureCard___3Yoqg
                    )}
                    description={
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent suscipit maximus ex, a sollicitudin justo ullamcorper fringilla."
                    }
                    iconBack={
                      <svg
                        className={classNames(projectcss.all, sty.svg___85JV)}
                        role={"img"}
                      />
                    }
                    long={true}
                    title={"Futsal ⚽️"}
                  />

                  <FeatureCard
                    className={classNames(
                      "__wab_instance",
                      sty.featureCard___7GLn
                    )}
                    description={
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent suscipit maximus ex, a sollicitudin justo ullamcorper fringilla."
                    }
                    iconBack={
                      <svg
                        className={classNames(projectcss.all, sty.svg__i9JTy)}
                        role={"img"}
                      />
                    }
                    long={true}
                    title={"Basketball 🏀"}
                  />

                  <FeatureCard
                    className={classNames(
                      "__wab_instance",
                      sty.featureCard__nBxYr
                    )}
                    description={
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent suscipit maximus ex, a sollicitudin justo ullamcorper fringilla."
                    }
                    iconBack={
                      <svg
                        className={classNames(projectcss.all, sty.svg___8Zktq)}
                        role={"img"}
                      />
                    }
                    long={true}
                    title={"Badminton 🏸"}
                  />
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__wVd7Q)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__kdDps)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={{
                    src: "/plasmic/ppis_x_pintu/images/undrawFansReCri31Png.png",
                    fullWidth: 991,
                    fullHeight: 843,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"sponsors"}
            data-plasmic-override={overrides.sponsors}
            className={classNames("__wab_instance", sty.sponsors)}
            hasSubtitle={true}
            hasTitle={true}
            subtitle={null}
            title={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cSvP
                )}
              >
                {"Sponsors (placeholder)"}
              </div>
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__vidwr)}>
              <InstagramsvgIcon
                className={classNames(projectcss.all, sty.svg__tbVrV)}
                role={"img"}
              />

              <GithubIconIcon
                className={classNames(projectcss.all, sty.svg__duGrr)}
                role={"img"}
              />
            </div>
          </Section>

          {true ? (
            <Section
              data-plasmic-name={"howItWorks"}
              data-plasmic-override={overrides.howItWorks}
              className={classNames("__wab_instance", sty.howItWorks)}
              color={"halfDark"}
              hasSubtitle={true}
              hasTitle={true}
              subtitle={
                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
              }
              title={"How Simple works"}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xwUxd)}
              >
                <FeatureCard
                  className={classNames(
                    "__wab_instance",
                    sty.featureCard__tarw
                  )}
                  description={
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                  }
                  iconFront={
                    <svg
                      className={classNames(projectcss.all, sty.svg___2AfYr)}
                      role={"img"}
                    />
                  }
                  title={"Initial Contact"}
                />

                <FeatureCard
                  className={classNames(
                    "__wab_instance",
                    sty.featureCard__el14W
                  )}
                  description={
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                  }
                  iconFront={
                    <svg
                      className={classNames(projectcss.all, sty.svg__jDfIj)}
                      role={"img"}
                    />
                  }
                  title={"Discovery Session"}
                />

                <FeatureCard
                  className={classNames(
                    "__wab_instance",
                    sty.featureCard__wpZie
                  )}
                  description={
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                  }
                  iconFront={
                    <svg
                      className={classNames(projectcss.all, sty.svg__j84)}
                      role={"img"}
                    />
                  }
                  title={"Contracting"}
                />

                <FeatureCard
                  className={classNames(
                    "__wab_instance",
                    sty.featureCard__yfC6L
                  )}
                  description={
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                  }
                  iconFront={
                    <svg
                      className={classNames(projectcss.all, sty.svg__dpDuX)}
                      role={"img"}
                    />
                  }
                  title={"Fast Prototyping"}
                />

                <FeatureCard
                  className={classNames(
                    "__wab_instance",
                    sty.featureCard___8Wd8H
                  )}
                  description={
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                  }
                  iconFront={
                    <svg
                      className={classNames(projectcss.all, sty.svg__bv9Db)}
                      role={"img"}
                    />
                  }
                  title={"Design Phase"}
                />

                <FeatureCard
                  className={classNames(
                    "__wab_instance",
                    sty.featureCard___4Ke5
                  )}
                  description={
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                  }
                  iconFront={
                    <svg
                      className={classNames(projectcss.all, sty.svg__gGS)}
                      role={"img"}
                    />
                  }
                  title={"Develop & Launch"}
                />
              </p.Stack>

              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox__c3TgN)}
                />
              ) : null}
            </Section>
          ) : null}
          {true ? (
            <Section
              data-plasmic-name={"validation"}
              data-plasmic-override={overrides.validation}
              className={classNames("__wab_instance", sty.validation)}
              hasSubtitle={true}
              hasTitle={true}
              subtitle={
                "Arcu cursus vitae congue mauris rhoncus viverra nibh cras pulvinar mattis blandit libero cursus mattis."
              }
              title={"Trusted by over 20,000 companies all over the world"}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bzlr0)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kHtxw)}
                >
                  <svg
                    className={classNames(projectcss.all, sty.svg___5Ovh3)}
                    role={"img"}
                  />

                  <svg
                    className={classNames(projectcss.all, sty.svg__a67Ml)}
                    role={"img"}
                  />

                  <svg
                    className={classNames(projectcss.all, sty.svg___9UZ7S)}
                    role={"img"}
                  />

                  <svg
                    className={classNames(projectcss.all, sty.svg__jtPbe)}
                    role={"img"}
                  />

                  <svg
                    className={classNames(projectcss.all, sty.svg__vxTjv)}
                    role={"img"}
                  />
                </p.Stack>

                <Testimonial
                  data-plasmic-name={"testimonial"}
                  data-plasmic-override={overrides.testimonial}
                  className={classNames("__wab_instance", sty.testimonial)}
                />
              </p.Stack>
            </Section>
          ) : null}
          {true ? (
            <HomeCta
              data-plasmic-name={"homeCta"}
              data-plasmic-override={overrides.homeCta}
              className={classNames("__wab_instance", sty.homeCta)}
            />
          ) : null}

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "topSection",
    "solutions",
    "columns",
    "sponsors",
    "howItWorks",
    "validation",
    "testimonial",
    "homeCta",
    "footer"
  ],

  header: ["header"],
  topSection: ["topSection"],
  solutions: ["solutions", "columns"],
  columns: ["columns"],
  sponsors: ["sponsors"],
  howItWorks: ["howItWorks"],
  validation: ["validation", "testimonial"],
  testimonial: ["testimonial"],
  homeCta: ["homeCta"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    topSection: makeNodeComponent("topSection"),
    solutions: makeNodeComponent("solutions"),
    columns: makeNodeComponent("columns"),
    sponsors: makeNodeComponent("sponsors"),
    howItWorks: makeNodeComponent("howItWorks"),
    validation: makeNodeComponent("validation"),
    testimonial: makeNodeComponent("testimonial"),
    homeCta: makeNodeComponent("homeCta"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
